{"version":3,"sources":["components/review-home.js","components/navbar.js","components/create-review.js","components/contact.js","components/show-review.js","components/edit-review.js","App.js","serviceWorker.js","index.js","assets/writing-bg.jpg"],"names":["useState","React","useEffect","ReviewHome","reviews","setReviews","axios","get","then","res","data","catch","err","console","log","className","src","require","alt","map","review","key","id","date","split","sport","event","to","Navbar","CreateReview","Date","setDate","setSport","setEvent","setReview","rating","setRating","reviewer","setReviewer","onSubmit","fullReview","post","window","location","name","onChange","e","target","value","type","rows","selected","Contact","href","ShowReview","props","match","params","rev","onClick","delete","EditReview","put","placeholder","App","path","exact","component","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"gOAIQA,EAAwBC,IAAxBD,SAAUE,EAAcD,IAAdC,UAEH,SAASC,IAAc,IAAD,EAEHH,EAAS,IAFN,mBAE1BI,EAF0B,KAEjBC,EAFiB,KAcjC,OAVAH,GAAU,WACNI,IAAMC,IAAI,iCACLC,MAAK,SAAAC,GACFJ,EAAWI,EAAIC,SAElBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAEHC,QAAQC,IAAIV,GAGR,yBAAKW,UAAU,aACX,yBAAKC,IAAKC,EAAQ,IAA6BC,IAAI,6BACnD,yBAAKH,UAAU,cACX,8CACA,2OAGA,8CACA,2BAAOA,UAAU,SACb,+BACI,4BACI,oCACA,qCACA,qCACA,yCAGR,+BACCX,EAAQe,KAAI,SAAAC,GAAM,OACnB,wBAAIC,IAAKD,EAAOE,IACZ,4BAAKF,EAAOG,KAAKC,MAAM,KAAK,IAC5B,4BAAKJ,EAAOK,OACZ,4BAAKL,EAAOM,OACZ,4BAAI,kBAAC,IAAD,CAAMC,GAAI,YAAcP,EAAOE,GAAIF,OAAQA,GAA3C,wBCzCb,SAASQ,IACpB,OACI,yBAAKb,UAAU,uCACX,kBAAC,IAAD,CAAMY,GAAG,IAAIZ,UAAU,gBAAvB,SACA,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMY,GAAI,IAAIZ,UAAU,YAAxB,YAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMY,GAAI,UAAUZ,UAAU,YAA9B,kBAEJ,wBAAIA,UAAU,eACV,kBAAC,IAAD,CAAMY,GAAI,WAAWZ,UAAU,YAA/B,e,2BCXT,SAASc,IAAgB,IAAD,EAEX7B,mBAAS,IAAI8B,MAFF,mBAE5BP,EAF4B,KAEtBQ,EAFsB,OAGT/B,mBAAS,IAHA,mBAG5ByB,EAH4B,KAGrBO,EAHqB,OAIThC,mBAAS,IAJA,mBAI5B0B,EAJ4B,KAIrBO,EAJqB,OAKPjC,mBAAS,IALF,mBAK5BoB,EAL4B,KAKpBc,EALoB,OAMPlC,mBAAS,GANF,mBAM5BmC,EAN4B,KAMpBC,EANoB,OAOHpC,mBAAS,IAPN,mBAO5BqC,EAP4B,KAOlBC,EAPkB,KA2BnC,OACI,6BACI,6CACA,0BAAMC,SApBG,WACb,IAAMC,EAAa,CACff,MAAOA,EACPC,MAAOA,EACPN,OAAQA,EACRe,OAAQA,EACRZ,KAAMA,EACNc,SAAUA,GAEd/B,IAAMmC,KAAK,+BAAgCD,GACtChC,MAAK,SAAAC,GACFI,QAAQC,IAAIL,EAAIC,MAChBgC,OAAOC,SAAS,OAEnBhC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,UAAYF,QAOlC,yBAAKG,UAAU,cACX,yCACA,4BACA6B,KAAK,QACL7B,UAAU,eACV8B,SAAW,SAAAC,GAAKd,EAASc,EAAEC,OAAOC,SAC9B,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,SAAd,WAIR,yBAAKjC,UAAU,cACX,yCACA,2BAAOkC,KAAK,OACZL,KAAK,QACL7B,UAAU,eACV8B,SAAW,SAAAC,GAAKb,EAASa,EAAEC,OAAOC,WAItC,yBAAKjC,UAAU,cACX,0CACA,8BAAUmC,KAAK,IACfN,KAAK,SACL7B,UAAU,eACV8B,SAAW,SAAAC,GAAKZ,EAAUY,EAAEC,OAAOC,WAIvC,yBAAKjC,UAAU,cACX,gDACA,4BAAQA,UAAU,eAAe6B,KAAK,SACtCC,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOC,SAC9B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAKjC,UAAU,cACX,uDACA,2BAAOkC,KAAK,OACZL,KAAK,WACL7B,UAAU,eACV8B,SAAW,SAAAC,GAAKR,EAAYQ,EAAEC,OAAOC,WAIzC,yBAAKjC,UAAU,cACX,wCACA,kBAAC,IAAD,CAAYoC,SAAU5B,EACtBqB,KAAK,OACLC,SAAW,SAAAC,GAAKf,EAAQe,OAE5B,yBAAK/B,UAAU,cACX,2BAAOkC,KAAK,SAASD,MAAM,gBAAgBjC,UAAU,uBClG1D,SAASqC,IACpB,OACI,6BACI,uCACA,uBAAGC,KAAK,iCAAR,W,ICHJrD,EAAwBC,IAAxBD,SAAUE,EAAcD,IAAdC,UAEH,SAASoD,EAAWC,GAAQ,IAAD,EAEVvD,EAAS,IAFC,mBAE/BoB,EAF+B,KAEvBc,EAFuB,KAItChC,GAAU,WACNI,IAAMC,IAAI,iCAAmCgD,EAAMC,MAAMC,OAAOnC,IAC3Dd,MAAK,SAAAC,GACFI,QAAQC,IAAIL,EAAIC,MAChBwB,EAAUzB,EAAIC,SAEjBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,UAAYF,QAE3C,CAAC2C,IAQJ,OACI,yBAAKxC,UAAU,eACVK,EAAOD,KAAI,SAAAuC,GAAG,OACX,yBAAKrC,IAAKqC,EAAIpC,IACV,yCACA,2BAAIoC,EAAIhC,OACR,0CACA,uBAAGX,UAAU,cAAc2C,EAAItC,QAC/B,2BAAG,kCAAQsC,EAAIrB,UAAY,YAAxB,OAAyCqB,EAAInC,KAAKC,MAAM,KAAK,KAChE,uBAAG6B,KAAK,IAAIM,QAAS,kBAffrC,EAekCoC,EAAIpC,QAdxDhB,IAAMsD,OAAO,iCAAmCtC,GAC3Cd,MAAK,SAAAC,GAAG,OAAII,QAAQC,IAAIL,EAAIC,SAC5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAHb,IAACU,IAeN,oBACA,kBAAC,IAAD,CAAMK,GAAI,SAAS+B,EAAIpC,IAAvB,oBC7BL,SAASuC,EAAWN,GAAQ,IAAD,EAEdvD,mBAAS,IAAI8B,MAFC,mBAE/BP,EAF+B,KAEzBQ,EAFyB,OAGZ/B,mBAAS,IAHG,mBAG/ByB,EAH+B,KAGxBO,EAHwB,OAIZhC,mBAAS,IAJG,mBAI/B0B,EAJ+B,KAIxBO,EAJwB,OAKVjC,mBAAS,IALC,mBAK/BoB,EAL+B,KAKvBc,EALuB,OAMVlC,mBAAS,GANC,mBAM/BmC,EAN+B,KAMvBC,EANuB,OAONpC,mBAAS,IAPH,mBAO/BqC,EAP+B,KAOrBC,EAPqB,KAS1CpC,qBAAU,WACNI,IAAMC,IAAI,iCAAmCgD,EAAMC,MAAMC,OAAOnC,IAC3Dd,MAAK,SAAAC,GACFI,QAAQC,IAAIL,EAAIC,MAChBsB,EAASvB,EAAIC,KAAK,GAAGe,OACrBQ,EAASxB,EAAIC,KAAK,GAAGgB,OACrBQ,EAAUzB,EAAIC,KAAK,GAAGU,QACtBgB,EAAU3B,EAAIC,KAAK,GAAGyB,QACtBG,EAAY7B,EAAIC,KAAK,GAAG2B,aAE3B1B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,UAAYF,QAEvC,CAAC2C,IAmBJ,OACI,6BACI,4CAAkB7B,GAClB,0BAAMa,SApBG,WACb,IAAMC,EAAa,CACff,MAAOA,EACPC,MAAOA,EACPN,OAAQA,EACRe,OAAQA,EACRZ,KAAMA,EACNc,SAAUA,GAEd/B,IAAMwD,IAAI,8BAA+BP,EAAMC,MAAMC,OAAOnC,GAAIkB,GAC3DhC,MAAK,SAAAC,GACFI,QAAQC,IAAIL,EAAIC,MAChBgC,OAAOC,SAAS,OAEnBhC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAI,UAAYF,QAOlC,yBAAKG,UAAU,cACX,yCACA,2BAAOkC,KAAK,OACZL,KAAK,QACLmB,YAAatC,EACbV,UAAU,eACV8B,SAAW,SAAAC,GAAKd,EAASc,EAAEC,OAAOC,WAItC,yBAAKjC,UAAU,cACX,yCACA,2BAAOkC,KAAK,OACZL,KAAK,QACLmB,YAAarC,EACbX,UAAU,eACV8B,SAAW,SAAAC,GAAKb,EAASa,EAAEC,OAAOC,WAItC,yBAAKjC,UAAU,cACX,0CACA,6BACA,2BAAG,+CAAqBK,IACxB,8BAAU8B,KAAK,IACfN,KAAK,SACL7B,UAAU,eACV8B,SAAW,SAAAC,GAAKZ,EAAUY,EAAEC,OAAOC,WAIvC,yBAAKjC,UAAU,cACX,gDACA,4BAAQA,UAAU,eAClBgD,YAAa5B,EACbS,KAAK,SACLC,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOC,SAC9B,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAKjC,UAAU,cACX,4CACA,2BAAOkC,KAAK,OACZL,KAAK,WACLmB,YAAa1B,EACbtB,UAAU,eACV8B,SAAW,SAAAC,GAAKR,EAAYQ,EAAEC,OAAOC,WAIzC,yBAAKjC,UAAU,cACX,wCACA,kBAAC,IAAD,CAAYoC,SAAU5B,EACtBqB,KAAK,OACLC,SAAW,SAAAC,GAAKf,EAAQe,OAE5B,yBAAK/B,UAAU,cACX,2BAAOkC,KAAK,SAASD,MAAM,cAAcjC,UAAU,uBCxFxDiD,MAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAACpC,EAAD,MACA,kBAAC,IAAD,CAAOqC,KAAK,IAAIC,OAAK,EAACC,UAAWhE,IACjC,kBAAC,IAAD,CAAO8D,KAAK,UAAUE,UAAWtC,IACjC,kBAAC,IAAD,CAAOoC,KAAK,WAAWE,UAAWf,IAClC,kBAAC,IAAD,CAAOa,KAAK,eAAeE,UAAWb,IACtC,kBAAC,IAAD,CAAOW,KAAK,YAAYE,UAAWN,MCRrBO,QACW,cAA7B1B,OAAOC,SAAS0B,UAEe,UAA7B3B,OAAOC,SAAS0B,UAEhB3B,OAAOC,SAAS0B,SAASb,MACvB,2DCZNc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpE,MAAK,SAAAqE,GACjCA,EAAaC,iB,kGErInBC,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.cec813cb.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom'\r\nconst { useState, useEffect } = React\r\n\r\nexport default function ReviewHome() {\r\n\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => { //may need reviews as dependency if it breaks? probably not\r\n        axios.get('http://localhost:3000/reviews')\r\n            .then(res => {\r\n                setReviews(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    console.log(reviews)\r\n\r\n    return (\r\n        <div className='container'>\r\n            <img src={require('../assets/writing-bg.jpg')} alt='pen and paper background'></img>\r\n            <div className='intro-text'>\r\n                <h1>Event Reviewer</h1>\r\n                <p>Read and write reviews of recent sportings events. Stay up to date with the latest goings on from sport around\r\n                    the world. Read reviews and ratings from viewers to check if you've missed anything exciting!\r\n                </p>\r\n                <p>Recent Reviews:</p>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Sport</th>\r\n                            <th>Event</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {reviews.map(review => \r\n                    <tr key={review.id}>\r\n                        <td>{review.date.split('T')[0]}</td>\r\n                        <td>{review.sport}</td>\r\n                        <td>{review.event}</td>\r\n                        <td><Link to={'/reviews/' + review.id} review={review}>Read review</Link></td>\r\n                    </tr>\r\n                )}\r\n                \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <nav className='navbar navbar-dark navbar-expand-md'>\r\n            <Link to='/' className='navbar-brand'>E-Rev</Link>\r\n            <div className='collapse navbar-collapse'>\r\n                <ul className='navbar-nav ml-auto'>\r\n                    <li className='navbar-item'>\r\n                        <Link to ='/' className='nav-link'>Reviews</Link>\r\n                    </li>\r\n                    <li className='navbar-item'>\r\n                        <Link to ='/create' className='nav-link'>Create Review</Link>\r\n                    </li>\r\n                    <li className='navbar-item'>\r\n                        <Link to ='/contact' className='nav-link'>Contact</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default function CreateReview() {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [sport, setSport] = useState('');\r\n    const [event, setEvent] = useState('');\r\n    const [review, setReview] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewer, setReviewer] = useState('');\r\n\r\n\r\n    const onSubmit = () => {\r\n        const fullReview = {\r\n            sport: sport,\r\n            event: event,\r\n            review: review,\r\n            rating: rating,\r\n            date: date,\r\n            reviewer: reviewer\r\n        }\r\n        axios.post('http://localhost:3000/create', fullReview)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                window.location='/'\r\n            })\r\n            .catch(err => console.log('Error: ' + err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Review</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='form-group'>\r\n                    <label>Sport:</label>\r\n                    <select \r\n                    name='sport'\r\n                    className='form-control'\r\n                    onChange= {e =>{setSport(e.target.value)}}>\r\n                        <option value=\"Football\">Football</option>\r\n                        <option value=\"Rugby\">Rugby</option>\r\n                        <option value=\"Cricket\">Cricket</option>\r\n                        <option value=\"Boxing\">Boxing</option>\r\n                        <option value=\"Baseball\">Baseball</option>\r\n                        <option value=\"Basketball\">Basketball</option>\r\n                        <option value=\"Darts\">Darts</option>\r\n                        <option value=\"Other\">Other</option>   \r\n                    </select>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Event:</label>\r\n                    <input type='text' \r\n                    name='event'\r\n                    className='form-control'\r\n                    onChange= {e =>{setEvent(e.target.value)}}>   \r\n                    </input>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Review:</label>\r\n                    <textarea rows='6' \r\n                    name='review'\r\n                    className='form-control'\r\n                    onChange= {e =>{setReview(e.target.value)}}>   \r\n                    </textarea>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Rating (1-5):</label>\r\n                    <select className='form-control' name='rating'\r\n                    onChange={e => setRating(e.target.value)}>\r\n                        <option value=\"0\">0</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Reviewer (optional):</label>\r\n                    <input type='text' \r\n                    name='reviewer'\r\n                    className='form-control'\r\n                    onChange= {e =>{setReviewer(e.target.value)}}>   \r\n                    </input>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Date:</label>\r\n                    <DatePicker selected={date}\r\n                    name='date'\r\n                    onChange= {e =>{setDate(e)}} />   \r\n                </div>\r\n                <div className='form-group'>\r\n                    <input type='submit' value='Create Review' className='btn btn-primary'></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div>\r\n            <h2>Contact</h2>\r\n            <a href='https://github.com/TomNPython'>Github</a>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nconst { useState, useEffect } = React; \r\n\r\nexport default function ShowReview(props) {\r\n    \r\n    const [review, setReview] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3000/reviews/' + props.match.params.id)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                setReview(res.data)\r\n            })\r\n            .catch(err => console.log('Error: ' + err))\r\n            \r\n    }, [props])\r\n\r\n    const deleteReview = (id) => {\r\n        axios.delete('http://localhost:3000/reviews/' + id)\r\n            .then(res => console.log(res.data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    return (\r\n        <div className='show-review'>\r\n            {review.map(rev => \r\n                <div key={rev.id}>\r\n                    <label>Event:</label>\r\n                    <p>{rev.event}</p>\r\n                    <label>Review:</label>\r\n                    <p className='review-box'>{rev.review}</p>\r\n                    <p><em>By {rev.reviewer || 'anonymous'} on {rev.date.split('T')[0]}</em></p>\r\n                    <a href='/' onClick={() => deleteReview(rev.id)}>Delete Review | </a>\r\n                    <Link to={'/edit/'+rev.id}>Edit Review</Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function EditReview(props) {\r\n\r\n    const [date, setDate] = useState(new Date());\r\n    const [sport, setSport] = useState('');\r\n    const [event, setEvent] = useState('');\r\n    const [review, setReview] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const [reviewer, setReviewer] = useState('');\r\n\r\nuseEffect(() => {\r\n    axios.get('http://localhost:3000/reviews/' + props.match.params.id)\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setSport(res.data[0].sport)\r\n            setEvent(res.data[0].event)\r\n            setReview(res.data[0].review)\r\n            setRating(res.data[0].rating)\r\n            setReviewer(res.data[0].reviewer)\r\n        })\r\n        .catch(err => console.log('Error: ' + err))\r\n        \r\n    }, [props])\r\n\r\n    const onSubmit = () => {\r\n        const fullReview = {\r\n            sport: sport,\r\n            event: event,\r\n            review: review,\r\n            rating: rating,\r\n            date: date,\r\n            reviewer: reviewer\r\n        }\r\n        axios.put('http://localhost:3000/edit/'+ props.match.params.id, fullReview)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                window.location='/'\r\n            })\r\n            .catch(err => console.log('Error: ' + err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Edit Review: {event}</h2>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='form-group'>\r\n                    <label>Sport:</label>\r\n                    <input type='text' \r\n                    name='sport'\r\n                    placeholder={sport}\r\n                    className='form-control'\r\n                    onChange= {e =>{setSport(e.target.value)}}>   \r\n                    </input>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Event:</label>\r\n                    <input type='text' \r\n                    name='event'\r\n                    placeholder={event}\r\n                    className='form-control'\r\n                    onChange= {e =>{setEvent(e.target.value)}}>   \r\n                    </input>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Review:</label>\r\n                    <br/>\r\n                    <p><em>Current Review: {review}</em></p>\r\n                    <textarea rows='6' \r\n                    name='review'\r\n                    className='form-control'\r\n                    onChange= {e =>{setReview(e.target.value)}}>   \r\n                    </textarea>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Rating (1-5):</label>\r\n                    <select className='form-control' \r\n                    placeholder={rating}\r\n                    name='rating'\r\n                    onChange={e => setRating(e.target.value)}>\r\n                        <option value=\"0\">0</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Reviewer:</label>\r\n                    <input type='text' \r\n                    name='reviewer'\r\n                    placeholder={reviewer}\r\n                    className='form-control'\r\n                    onChange= {e =>{setReviewer(e.target.value)}}>   \r\n                    </input>\r\n\r\n                </div>\r\n                <div className='form-group'>\r\n                    <label>Date:</label>\r\n                    <DatePicker selected={date}\r\n                    name='date'\r\n                    onChange= {e =>{setDate(e)}} />   \r\n                </div>\r\n                <div className='form-group'>\r\n                    <input type='submit' value='Edit Review' className='btn btn-primary'></input>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\n\nimport ReviewHome from './components/review-home';\nimport Navbar from './components/navbar';\nimport CreateReview from './components/create-review';\nimport Contact from './components/contact';\nimport ShowReview from './components/show-review';\nimport EditReview from './components/edit-review';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Route path='/' exact component={ReviewHome} />\n      <Route path='/create' component={CreateReview} />\n      <Route path='/contact' component={Contact} />\n      <Route path='/reviews/:id' component={ShowReview} />\n      <Route path='/edit/:id' component={EditReview} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/writing-bg.1d09b670.jpg\";"],"sourceRoot":""}